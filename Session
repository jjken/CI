	//jjken 2018.3.6
	// delete this code
	// if ($this->sess_expiration == 0)
	// {
	// 	$this->sess_expiration = (60*60*24*365*2);
	// }	



	/**
	 * Fetch a specific item from the session array
	 *
	 * @access	public
	 * @param	string
	 * @return	string
	 */
	 //get data to $_SESSION
	function userdata($item)
	{
		// return ( ! isset($this->userdata[$item])) ? FALSE : $this->userdata[$item];
		//update ken by 2018.3.16
		$encryption_key = $this->CI->config->item('encryption_key');
		return ( ! isset($_SESSION[$encryption_key][$item])) ? FALSE : $_SESSION[$encryption_key][$item];
	}
	
	
	
	
	
	
	/**
	 * Add or change data in the "userdata" array
	 *
	 * @access	public
	 * @param	mixed
	 * @param	string
	 * @return	void
	 */
	 //set data to $_SESSION
	function set_userdata($newdata = array(), $newval = '')
	{
		//update by ken 2018.3.16
		$encryption_key = $this->CI->config->item('encryption_key');
		if (is_string($newdata))
		{
			// $newdata = array($newdata => $newval);
			$_SESSION[$encryption_key][$newdata] = $newval;
		}		

		if (count($newdata) > 0)
		{
			foreach ($newdata as $key => $val)
			{
				// $this->userdata[$key] = $val;
				$_SESSION[$encryption_key][$key] = $val;
			}
		}
	}
	
	
	/**
	 * Delete a session variable from the "userdata" array
	 *
	 * @access	array
	 * @return	void
	 */
	 //delete session
	function unset_userdata($newdata = array())
	{
		$encryption_key = $this->CI->config->item('encryption_key');
		session_unset($_SESSION[$encryption_key]);
		session_destroy();
	}
	
	

	
	
